#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Wed Nov  7 20:04:21 2018
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn $env(SHELL)
match_max 100000
expect -exact "$ "
send -- "./RootTheBox/rootthebox.py --setup=prod\r"
expect -exact "./RootTheBox/rootthebox.py --setup=prod\r
[1m[36m\[*\] [0mSwitching CWD to '/home/vagrant/RootTheBox'\r
[1m[36m\[*\] [0m20:04:33 : Creating the database ...\r
[1m[36m\[*\]Bootstrapping the database ...\r
[1m[35m\[?\] [0mRootTheBox Admin Username: "
send -- "armenr\r"
expect -exact "armenr\r
[1m[35m\[?\] [0mNew Admin Password: "
send -- "mamankoonerem123\r"
expect -exact "\r
[1m[35m\[?\] [0mConfirm New Admin Password: "
send -- "mamankoonerem123\r"
expect -exact "\r
Traceback (most recent call last):\r
  File \"./RootTheBox/rootthebox.py\", line 570, in <module>\r
    setup()\r
  File \"./RootTheBox/rootthebox.py\", line 68, in setup\r
    import setup.bootstrap\r
  File \"/home/vagrant/RootTheBox/setup/bootstrap.py\", line 78, in <module>\r
    dbsession.flush()\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 2254, in flush\r
    self._flush(objects)\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 2381, in _flush\r
    transaction.rollback(_capture_exception=True)\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/sqlalchemy/util/langhelpers.py\", line 66, in __exit__\r
    compat.reraise(exc_type, exc_value, exc_tb)\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 2345, in _flush\r
    flush_context.execute()\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/sqlalchemy/orm/unitofwork.py\", line 395, in execute\r
    rec.execute(self)\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/sqlalchemy/orm/unitofwork.py\", line 560, in execute\r
    uow\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/sqlalchemy/orm/persistence.py\", line 181, in save_obj\r
    mapper, table, insert)\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/sqlalchemy/orm/persistence.py\", line 866, in _emit_insert_statements\r
    execute(statement, params)\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/sqlalchemy/engine/base.py\", line 948, in execute\r
    return meth(self, multiparams, params)\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/sqlalchemy/sql/elements.py\", line 269, in _execute_on_connection\r
    return connection._execute_clauseelement(self, multiparams, params)\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/sqlalchemy/engine/base.py\", line 1060, in _execute_clauseelement\r
    compiled_sql, distilled_params\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/sqlalchemy/engine/base.py\", line 1200, in _execute_context\r
    context)\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/sqlalchemy/engine/base.py\", line 1413, in _handle_dbapi_exception\r
    exc_info\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/sqlalchemy/util/compat.py\", line 265, in raise_from_cause\r
    reraise(type(exception), exception, tb=exc_tb, cause=cause)\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/sqlalchemy/engine/base.py\", line 1193, in _execute_context\r
    context)\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/sqlalchemy/engine/default.py\", line 509, in do_execute\r
    cursor.execute(statement, parameters)\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/MySQLdb/cursors.py\", line 250, in execute\r
    self.errorhandler(self, exc, value)\r
  File \"/home/vagrant/.local/lib/python2.7/site-packages/MySQLdb/connections.py\", line 50, in defaulterrorhandler\r
    raise errorvalue\r
sqlalchemy.exc.IntegrityError: (_mysql_exceptions.IntegrityError) (1062, \"Duplicate entry 'Bootstrap' for key '_name'\") \[SQL: u'INSERT INTO theme (created, uuid, _name) VALUES (%s, %s, %s)'\] \[parameters: (datetime.datetime(2018, 11, 7, 20, 4, 42, 193953), '2b9ab4dc-2880-41ca-a8a8-0358cea4cc63', 'Bootstrap')\] (Background on this error at: http://sqlalche.me/e/gkpj)\r
]0;vagrant@ubuntu-bionic: ~[01;32mvagrant@ubuntu-bionic[00m:[01;34m~[00m\$ "
send -- ""
expect eof
